name: Events CI/CD

permissions:
  packages: write
  contents: read

on:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet-version: [6.0.x, 7.0.x, 8.0.x]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
         fetch-depth: 0

      - name: Set the TFM in Ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          VERSION=$(echo "${{ matrix.dotnet }}" | sed 's/[^0-9.]*//g')
          VERSION=$(echo "${VERSION}" | sed 's/\.$//')
          DOTNET_TFM="net${VERSION}"
          echo "DOTNET_TFM=$DOTNET_TFM" >> $GITHUB_ENV

      - name: Set the TFM in Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          $VERSION = "${{ matrix.dotnet }}".Substring(0, "${{ matrix.dotnet }}".LastIndexOf('.'))
          $DOTNET_TFM = "net$VERSION"
          echo "DOTNET_TFM=$DOTNET_TFM" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dependencies
        run: dotnet restore

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: '6.x'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v3.0.0

      - name: Build
        run: dotnet build -c Release --no-restore /p:Version=${{ env.GitVersion.semver }} /p:AssemblyVersion=${{ env.GitVersion.assemblySemVer }} /p:FileVersion=${{ env.GitVersion.assemblySemFileVer }}

      - name: Test
        if: startsWith(matrix.os, 'ubuntu')
        run: dotnet test --no-build --no-restore --verbosity normal --framework ${{ env.DOTNET_TFM }}

      - name: Package Artifacts
        run: dotnet pack -c Release --no-build --no-restore --output ./pkgs --version=${{ env.GitVersion.semver }}

      - name: Publish Package to GitHub Packages
        run: dotnet nuget push ./pkgs/*.nupkg --source https://nuget.pkg.github.com/deveel/index.json --api-key ${{ secrets.GITHUB_TOKEN }}

  clean:
    needs: build
    uses: ./.github/actions/clean-packages.yml